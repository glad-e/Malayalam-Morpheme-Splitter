import re
# from morph_examples import examples
from malayalam_words import root_word_lookup



examples = {'ആനയ്ക്ക്': ['ആന', 'ക്ക്'],
    'ആനയുടെ': ['ആന', 'ഉടെ'],
    'ആനയോട്': ['ആന', 'ഓട്'],
    'ആനയിൽ': ['ആന', 'ഇൽ'],
    'ആന': ['ആന', '-'],
    'ആനകൾ': ['ആന', 'കൾ'],
    'ആനകൾക്ക്': ['ആനകൾ', 'ക്ക്'],
    'ആനകളിൽ': ['ആനകൾ', 'ഇൽ'],
    'ആനയെ': ['ആന', 'എ'],
    'ആനയും': ['ആന', 'ഉം'],
    'ആനകളെ': ['ആനകൾ', 'എ'],
    'ആനകളോട്': ['ആനകൾ', 'ഓട്'],
    'ആനകളാൽ': ['ആനകൾ', 'ആൽ'],
    'ആനകളും': ['ആനകൾ', 'ഉം'],
    'മരം': ['മരം', '-'],
    'മരത്തെ': ['മരം', 'എ'],
    'മരത്തോട്': ['മരം', 'ഓട്'],
    'മരത്തിന്': ['മരം', 'ഇന്'],
    'മരത്താൽ': ['മരം', 'ആൽ'],
    'മരത്തിന്റെ': ['മരം', 'ഇന്റെ'],
    'മരത്തിൽ': ['മരം', 'ഇൽ'],
    'മരങ്ങൾ': ['മരം', 'കൾ'],
    'മരവും': ['മരം', 'ഉം'],
    'ആനയെക്കൊണ്ട്': ['ആനയെ', 'കൊണ്ട്'],
    'ആനയില്ല': ['ആന', 'ഇല്ല'],
    'മരമില്ല': ['മരം', 'ഇല്ല'],
    'ആനയുണ്ട്': ['ആന', 'ഉണ്ട്'],
    'മരമുണ്ട്': ['മരം', 'ഉണ്ട്'],
    'ആനയല്ല': ['ആന', 'അല്ല'],
    'മരമല്ല': ['മരം', 'അല്ല'],
    'ആനയാണ്': ['ആന', 'ആണ്'],
    'മരമാണ്': ['മരം', 'ആണ്'],
    'ആനയുള്ള': ['ആന', 'ഉള്ള'],
    'മരമുള്ള': ['മരം', 'ഉള്ള'],
    'ആനയെന്ന്': ['ആന', 'എന്ന്'],
    'മരമെന്ന്': ['മരം', 'എന്ന്'],
    'എന്നുള്ള': ['എന്ന്', 'ഉള്ള'],
    'കൊണ്ടുള്ള': ['കൊണ്ട്', 'ഉള്ള'],
    'കൊണ്ടെന്ന്': ['കൊണ്ട്', 'എന്ന്'],
    'ആനയേ': ['ആന', 'ഏ'],
    'മരമേ': ['മരം', 'ഏ'],
    'ആണുള്ള': ['ആണ്', 'ഉള്ള'],
    'ആനയായ': ['ആന', 'ആയ'],
    'മരമായ': ['മരം', 'ആയ'],
    'ആനയെല്ലാം': ['ആന', 'എല്ലാം'],
    'മരമെല്ലാം': ['മരം', 'എല്ലാം'],
    'കൊണ്ടെല്ലാം': ['കൊണ്ട്', 'എല്ലാം'],
    'എല്ലാമുള്ള': ['എല്ലാം', 'ഉള്ള'],
    'എല്ലാമായ': ['എല്ലാം', 'ആയ'],
    'അവളുടെ': ['അവൾ', 'ഉടെ'],
    'പപ്പടം': ['പപ്പടം', '-'],
    'വീട്ടിലെ': ['വീട്ടിൽ', 'എ'],
    'വീട്ടിൽ': ['വീട്', 'ഇൽ'],
    'വീട്': ['വീട്', '-'],
    'അമ്മ': ['അമ്മ', '-'],
    'അമ്മമാർ': ['അമ്മ', 'മാർ'],
    'അമ്മമാരെ': ['അമ്മമാർ', 'എ'],
    'അമ്മയോട്': ['അമ്മ', 'ഓട്'],
    'അമ്മമാരോട്': ['അമ്മമാർ', 'ഓട്'],
    'അമ്മമാർക്ക്': ['അമ്മമാർ', 'ക്ക്'],
    'അമ്മയാൽ': ['അമ്മ', 'ആൽ'],
    'അമ്മമാരാൽ': ['അമ്മമാർ', 'ആൽ'],
    'അമ്മമാരുടെ': ['അമ്മമാർ', 'ഉടെ'],
    'അമ്മയിൽ': ['അമ്മ', 'ഇൽ'],
    'അമ്മമാരിൽ': ['അമ്മമാർ', 'ഇൽ'],
    'അമ്മയോളം': ['അമ്മ', 'ഓളം'],
    'അമ്മമാരോളം': ['അമ്മമാർ', 'ഓളം'],
    'അമ്മയായി': ['അമ്മ', 'ആയി'],
    'അമ്മയ്ക്കായി': ['അമ്മക്ക്', 'ആയി'],
    'അമ്മയ്ക്കായ': ['അമ്മക്ക്', 'ആയ'],
    'അമ്മയ്ക്കായത്': ['അമ്മയ്ക്കായ', 'അത്'],
    'അമ്മമാർക്കായി': ['അമ്മമാർക്ക്', 'ആയി'],
    'അമ്മയിലൂടെ': ['അമ്മയിൽ', 'ഊടെ'],
    'അമ്മമാരിലൂടെ': ['അമ്മമാരിൽ', 'ഊടെ'],
    'അമ്മയിലോട്ട്': ['അമ്മയിൽ', 'ഓട്ട്'],
    'അമ്മയിലേക്ക്': ['അമ്മയിൽ', 'ഏക്ക്'],
    'അമ്മയോടൊപ്പം': ['അമ്മയോട്', 'ഒപ്പം'],
    'അമ്മയോടുള്ള': ['അമ്മയോട്', 'ഉള്ള'],
    'അമ്മയോടുള്ളത്': ['അമ്മയോടുള്ള', 'അത്'],
    'അമ്മയ്ക്കുള്ള': ['അമ്മയ്ക്ക്', 'ഉള്ള'],
    'അമ്മയിലുള്ള': ['അമ്മയിൽ', 'ഉള്ള'],
    'അമ്മയോളമുള്ള': ['അമ്മയോളം', 'ഉള്ള'],
    'അമ്മയ്ക്കായുള്ള': ['അമ്മയ്ക്കായി', 'ഉള്ള'],
    'അമ്മയിലൂടെയുള്ള': ['അമ്മയിലൂടെ', 'ഉള്ള'],
    'അമ്മയിലോട്ടുള്ള': ['അമ്മയിലോട്ട്', 'ഉള്ള'],
    'അമ്മയിലേക്കുള്ള': ['അമ്മയിലേക്ക്', 'ഉള്ള'],
    'അമ്മയോടൊപ്പമുള്ള': ['അമ്മയോടൊപ്പം', 'ഉള്ള'],
    'അമ്മയെയല്ല': ['അമ്മയെ', 'അല്ല'],
    'അമ്മമാരെയല്ല': ['അമ്മമാരെ', 'അല്ല'],
    'അമ്മയെയല്ലെന്ന': ['അമ്മയെയല്ല', 'എന്ന'],
    'അമ്മയെയല്ലയെന്ന': ['അമ്മയെയല്ല', 'എന്ന'],
    'അമ്മയെയല്ലെന്ന്': ['അമ്മയെയല്ല', 'എന്ന്'],
    'അമ്മയെയല്ലയെന്ന്': ['അമ്മയെയല്ല', 'എന്ന്'],
    'അമ്മയെയല്ലയാണ്': ['അമ്മയെയല്ല', 'ആണ്'],
    'അമ്മയെയല്ലെങ്കിൽ': ['അമ്മയെയല്ല', 'എങ്കിൽ'],
    'അമ്മയെന്ന്': ['അമ്മ', 'എങ്കിൽ'],
    'അമ്മയെയല്ലെങ്കിലെന്ന്': ['അമ്മയെയല്ല', 'എന്ന്'],
    'അമ്മയെയല്ലാതെ': ['അമ്മയെയല്ല', 'ആതെ'],
    'അമ്മയെയല്ലാത്ത': ['അമ്മയെയല്ല', 'ആത്ത'],
    'അമ്മയല്ലാത്തത്': ['അമ്മയല്ലാത്ത', 'അത്'],
    'അമ്മയായത്': ['അമ്മയായ', 'അത്'],
    'ക്ഷമ': ['ക്ഷമ', '-'],
    'ദയ': ['ദയ', '-'],
    'അക്ഷമയോടെ': ['അക്ഷമ', 'ഓടെ'],
    'മരുഭൂമിയിൽ': ['മരുഭൂമി', 'ഇൽ'],
    'മനസോടെ': ['മനസ്', 'ഓടെ'],
    'കിണറിൽ': ['കിണർ', 'ഇൽ'],
    'അകലെ': ['അകലം', 'എ'],
    'തട്ടിൽ': ['തട്ട്', 'ഇൽ'],
    'മകനെ': ['മകൻ', 'എ'],
    'മരുമകനെ': ['മരുമകൻ', 'എ'],
    'വണ്ടിയിൽ': ['വണ്ടി', 'ഇൽ'],
    'തേനിൽ': ['തേൻ', 'ഇൽ'],
    'കുരങ്ങന്മാർ': ['കുരങ്ങൻ', 'മാർ'],
    'മനുഷ്യന്മാർ': ['മനുഷ്യൻ', 'മാർ'],
    'വിധവമാർ': ['വിധവ', 'മാർ'],
    'മനുഷ്യനാൽ': ['മനുഷ്യൻ', 'ആൽ'],
    'വിലങ്ങിൽ': ['വിലങ്ങ്', 'ഇൽ'],
    'കുഴിആനയ്ക്ക്': ['കുഴിആന', 'ക്ക്'],
    'കുതിരയുടെ': ['കുതിര', 'ഉടെ'],
    'കുരങ്ങന്റെ': ['കുരങ്ങൻ', 'ഇൻ്റെ'],
    'അമ്മച്ചിയുടെ': ['അമ്മച്ചി', 'ഉടെ'],
    'മരുമകന്റെ': ['മരുമകൻ', 'ഇൻ്റെ'],
    'മണ്ടന്മാരുടെ': ['മണ്ടന്മാർ', 'ഉടെ']
}



def read_all_examples():
    return examples



def find_morph(word):
    if not word:
        return [word, '']

    for w in examples:
        if re.match(f'.*{word}$', w):
            suffix = examples[w][1]
            index = len(w) - len(word)
            word = examples[w][0][index:]
            if suffix == '-':
                return [word, ""]
            return [word, suffix]

    if len(word) > 1:
        pre_part = word[0]
        word = word[1:]
        morph_list = find_morph(word)
        return [pre_part + morph_list[0]] + morph_list[1:]
    return [word, '*']



def morph_anal(root):
    actual_word = root
    wrd = ''
    analysed_word = []
    while root != wrd:
        wrd = root
        if wrd in root_word_lookup:
            root = wrd
        else:
            temp = find_morph(wrd)
            root = temp[0]
            analysed_word = [temp[1]] + analysed_word
    return {actual_word: [root] + analysed_word}



def db_entry(inp):
    for word, new_answer in inp.items():
        analysed_word = find_morph(word)
        if new_answer == analysed_word and word in examples:
            print(f"This entry ({word}) would create redundancy")
        else:
            examples[word] = new_answer
            try:
                with open('morph_examples.py', 'w', encoding='utf-8') as db:
                    db.write("examples = {")
                    for k, v in examples.items():
                        db.write(f"'{k}' : {v},\n")
                    db.write("}")
                    print(f"Word{word} -> {new_answer} has been successfully added!")
            except:
                pass






            